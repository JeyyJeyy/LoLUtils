"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.load = exports.resolveSync = void 0;
const fs = __importStar(require("fs"));
const fast_glob_1 = require("fast-glob");
const path_1 = require("path");
const gather_deps_1 = require("./gather-deps");
const file_1 = require("./file");
const enhanced_resolve_1 = require("enhanced-resolve");
const { readFileSync, lstatSync, statSync, realpathSync } = fs;
const supportedJsExtensions = ['.js', '.cjs', '.mjs'];
const fileSystem = new enhanced_resolve_1.CachedInputFileSystem(fs, 4000), esmResolver = enhanced_resolve_1.ResolverFactory.createResolver({
    extensions: [],
    conditionNames: ['node', 'import', 'require', 'default'],
    useSyncFileSystemCalls: true,
    symlinks: false,
    fileSystem,
}), cjsResolver = enhanced_resolve_1.ResolverFactory.createResolver({
    extensions: ['.js', '.cjs', '.mjs', '.json', '.node'],
    conditionNames: ['node', 'require', 'default'],
    useSyncFileSystemCalls: true,
    symlinks: false,
    fileSystem,
}), defaultOptions = {
    loadContent: true,
    expand: 'none',
    isEntry: false,
    type: 'commonjs',
};
function stripControlCharacters(path) {
    return path && path.replace(/[\u0000-\u001F\u007F-\u009F]/g, '');
}
const emptyContext = {}, emptyResolveContext = {};
function resolveSync(from, request, resolver = cjsResolver) {
    const result = {
        absPath: '',
        pkgPath: '',
        pkg: null,
        warning: '',
    };
    resolver.resolve(emptyContext, from, request, emptyResolveContext, (err, path, data) => {
        if (err) {
            result.warning = err.message;
            return;
        }
        result.absPath = stripControlCharacters(path);
        result.pkgPath = stripControlCharacters(data.descriptionFilePath);
        result.pkg = data.descriptionFileData;
        return;
    });
    return result;
}
exports.resolveSync = resolveSync;
async function expand(file, fileDir, baseDir, globs) {
    const files = (0, fast_glob_1.sync)(globs, {
        onlyFiles: true,
        cwd: baseDir,
        followSymbolicLinks: false,
    });
    files
        .sort() //glob search is width first and not deterministic
        .map((dep) => (0, file_1.ensureDottedRelative)(fileDir, (0, path_1.join)(baseDir, dep)))
        .filter((relDep) => file.absPath !== (0, path_1.join)(baseDir, relDep))
        .forEach((relDep) => {
        file.deps[relDep] = file.deps[relDep] || null;
    });
    const currentDeps = Object.keys(file.deps);
    file.package &&
        file.package.dependencies &&
        Object.keys(file.package.dependencies || {}).forEach((dependency) => {
            if (!currentDeps.some((curDep) => curDep.startsWith(dependency))) {
                file.deps[dependency] = file.deps[dependency] || null;
            }
        });
}
function load(workingDirectory, request, options = defaultOptions) {
    var _a;
    const resolver = options.type === 'module' ? esmResolver : cjsResolver, { absPath, pkg, pkgPath, warning } = resolveSync(workingDirectory, request, resolver);
    if (!absPath) {
        return { warning: warning };
    }
    const file = (0, file_1.createFile)(absPath), isJs = options.isEntry || supportedJsExtensions.some((x) => absPath.endsWith(x));
    file.absPath = absPath;
    if (isJs || absPath.endsWith('json')) {
        file.contents = readFileSync(absPath, 'utf-8');
    }
    if (isJs) {
        try {
            const isModule = absPath.endsWith('.mjs') || !(0, file_1.isScript)(file.contents);
            const parseResult = (0, gather_deps_1.gatherDependencies)(file.contents, isModule);
            Object.assign(file.deps, parseResult.deps);
            file.moduleType = isModule ? 'module' : 'commonjs';
            file.variableImports = parseResult.variable;
        }
        catch (e) {
            return { warning: `Error parsing file: "${file.absPath}"\n${e.stack}` };
        }
    }
    const fileDir = (0, path_1.dirname)(file.absPath), expandVariable = Boolean(options.expand === 'variable' && file.variableImports);
    if ((0, file_1.isNodeModule)(request) && pkg && pkgPath) {
        file.package = pkg;
        file.deps[(0, file_1.ensureDottedRelative)(fileDir, pkgPath)] = null;
        const pkgDir = (file.moduleRoot = (0, path_1.dirname)(pkgPath)), expandAll = options.expand === 'all';
        if (expandVariable || expandAll) {
            expand(file, fileDir, pkgDir, (0, file_1.nodeModuleGlobs)(file));
            file.contextExpanded = true;
        }
        if ((0, file_1.extraGlobs)(file).length) {
            expand(file, fileDir, pkgDir, (0, file_1.extraGlobs)(file));
        }
    }
    else if (expandVariable && ((_a = options.context) === null || _a === void 0 ? void 0 : _a.moduleRoot) && !options.context.expanded) {
        expand(file, fileDir, options.context.moduleRoot, (0, file_1.nodeModuleGlobs)({ package: { files: options.context.globs } }));
        file.contextExpanded = true;
    }
    if (!options.loadContent) {
        file.contents = null;
    }
    const stats = lstatSync(file.absPath);
    if (stats.isSymbolicLink()) {
        const path = realpathSync(file.absPath);
        const absStat = statSync(file.absPath);
        file.realPath = path;
        file.realSize = absStat.size;
    }
    file.size = stats.size;
    return file;
}
exports.load = load;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS1sb2FkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbm9kZS1sb2FkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx1Q0FBd0I7QUFDeEIseUNBQXdDO0FBQ3hDLCtCQUFvQztBQUNwQywrQ0FBa0Q7QUFDbEQsaUNBU2U7QUFDZix1REFBeUU7QUFFekUsTUFBTSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxHQUFHLEVBQUUsQ0FBQTtBQUM5RCxNQUFNLHFCQUFxQixHQUFHLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQTtBQU1yRCxNQUFNLFVBQVUsR0FBRyxJQUFJLHdDQUFxQixDQUFDLEVBQUUsRUFBRSxJQUFJLENBQVEsRUFDM0QsV0FBVyxHQUFHLGtDQUFlLENBQUMsY0FBYyxDQUFDO0lBQzNDLFVBQVUsRUFBRSxFQUFFO0lBQ2QsY0FBYyxFQUFFLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDO0lBQ3hELHNCQUFzQixFQUFFLElBQUk7SUFDNUIsUUFBUSxFQUFFLEtBQUs7SUFDZixVQUFVO0NBQ1gsQ0FBYSxFQUNkLFdBQVcsR0FBRyxrQ0FBZSxDQUFDLGNBQWMsQ0FBQztJQUMzQyxVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDO0lBQ3JELGNBQWMsRUFBRSxDQUFDLE1BQU0sRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDO0lBQzlDLHNCQUFzQixFQUFFLElBQUk7SUFDNUIsUUFBUSxFQUFFLEtBQUs7SUFDZixVQUFVO0NBQ1gsQ0FBYSxFQUNkLGNBQWMsR0FBNkI7SUFDekMsV0FBVyxFQUFFLElBQUk7SUFDakIsTUFBTSxFQUFFLE1BQU07SUFDZCxPQUFPLEVBQUUsS0FBSztJQUNkLElBQUksRUFB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